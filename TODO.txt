V3:
    WORKFLOW:
        1. telegram bot gets raw message with signal
            return: {
                "tp": [2, 4, 2, 2],
                "sl": [null || 1],
                "limit": [null || 1.5], 
                "market": true || false,
            }

        2. passes it to strategy which calculates all entry points as well as margin for that trade
            return: {
                "strategy": TYPEOF STRATEGY (to tell the binane bot how to work with the orders example: if limit order triggers tp above it will trigger to keep the position in green)
                "tp": [[2, 20], [2.4, 40]],
                "sl": [null],
                "limit": [[1.5, 1.1 usd]] (to get the average down and be in profit even if trade goes badly)
            }
        
        3. passes it to binancebot which creates the orders as well as the local database websocket for conditional creation of new orders

    TODO:
        - SOMEHOW MODIFY BINANCE BOT TO BE ABLE TO WORK DIFFERENTLY WITH DIFFERENT STRATEGIES

        - STRUCTURE ALL RETURN TYPES INTO STRUCTS OR SOME SHIT FOR BETTER READABILITY
            - half done

        - ADD STRATEGY MAIN TEMPLATE CLASS 

        - ADD SUBCLASSES WITH SPECIFIC STRATEGY






------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------

OPTIMIZATION:
    main instance
        - one threaded listener for all instances
        - move repetetive task to main instance

    sub instances in local threads
        - manage things that can happen only locally

FOR FUTURE:
    add hedge mode positions